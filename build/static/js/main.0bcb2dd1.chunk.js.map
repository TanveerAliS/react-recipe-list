{"version":3,"sources":["assets/hellofresh-logo.svg","components/Rating.js","components/SearchBar.js","components/Favorite.js","container/Recipes.js","container/RecipeDetails.js","components/NoMatch.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","RatingStar","_ref","active","handleUpdateRating","index","fill","react_default","a","createElement","onClick","bind","xmlns","width","height","viewBox","points","Rating","props","_this2","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","updateRating","newRating","recipeId","state","rating","setState","recipeRating","_this3","className","output","i","isActive","push","Rating_RatingStar","key","renderRating","Component","SearchBar","filterText","onFilterTextInput","handleClearText","type","required","placeholder","value","onChange","Favorite","_this","handleIsFavorite","favoriteRecipes","localStorage","getItem","JSON","parse","isFavorite","splice","findIndex","id","setItem","stringify","toConsumableArray","Set","prevState","isFavorited","href","concat","Recipes","getRecipes","url","window","encodeURI","fetch","then","response","json","recipes","isFetching","catch","error","handleFilterTextInput","e","target","findMatches","wordToMatch","filter","recipe","regex","RegExp","name","match","clearText","_this$state","recipesList","react","src","logo","alt","components_SearchBar","map","thumb","components_Favorite","react_router_dom","to","dangerouslySetInnerHTML","__html","replace","headline","calories","time","split","slice","join","components_Rating","Math","floor","RecipeDetails","location","pathname","find","image","description","ingredients","ingredient","fats","proteins","carbos","NoMatch","App","react_router","exact","path","component","w","React","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.0bcb2dd1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/hellofresh-logo.869c531b.svg\";","/*\n    Rating -> Class Components\n    1.Here we just updating the rating based on user selection and we not persisting this data.\n\n    props { recipeRating, recipeId }\n    state { rating }\n*/\n\nimport React, { Component } from 'react';\n\nconst RatingStar = ({active, handleUpdateRating, index}) => {  \n    let fill = active ? '#F35369' : '#BEC2C9';\n    return (\n    <span onClick={((a) => {\n            handleUpdateRating(a)\n        }).bind(this, index)}>\n        <svg xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"15px\"\n        height=\"15px\"\n        viewBox=\"0 0 12 12\">\n        <polygon\n            fill={fill}\n            points=\"6 8.5200001 2.47328849 10.854102 3.60333748 6.77872286 0.293660902 4.14589803 4.51878111 3.96127709 6 0 7.48121889 3.96127709 11.7063391 4.14589803 8.39666252 6.77872286 9.52671151 10.854102\">\n        </polygon>\n        </svg>\n    </span>\n    )\n}\n\nclass Rating extends Component {\n    constructor(props) {\n      super(props)\n      this.state = {\n          rating: this.props.recipeRating\n      };\n    }\n\n    updateRating = (newRating, recipeId) => {\n        if (newRating + 1 === this.state.rating) {\n          this.setState({ rating: 0})\n        } else {\n          this.setState({ rating: newRating + 1})\n        }\n    }\n\n    render(){\n        const { recipeId } = this.props;\n        const { rating } = this.state;\n        const ratingSize = 5;\n        const renderRating = () => {\n            let output = [];\n\n            for (let i = 0; i < ratingSize; i++) {\n                let isActive = i >= rating && i < ratingSize ? false : true;\n                output.push(\n                    <RatingStar className=\"rating\" key={i}\n                        recipeId={recipeId}\n                        active={isActive}\n                        handleUpdateRating={this.updateRating}\n                        index={i}\n                    />\n                )\n            }\n\n            return output;\n        }\n        return (\n            <div className=\"Rating\">{renderRating()}</div>\n        )\n    }\n}\n\nexport default Rating;","/*\n    Rating -> Functional Components\n    1. An input field to filter the recipes based on user input\n    2. Button to clear the field and reset the filter\n    \n    props { filterText, onFilterTextInput, handleClearText}\n*/\n\nimport React from 'react';\n\nconst SearchBar = ({filterText, onFilterTextInput, handleClearText}) => {\n    return (\n        <div className=\"SearchBar\">\n            <input\n                className=\"SearchBar__input\"\n                type=\"text\"\n                required={true}\n                placeholder=\"Search recipes...\"\n                value={filterText || ''}\n                onChange={onFilterTextInput}\n            />\n            <button className=\"SearchBar__clear\" onClick={handleClearText} type=\"reset\"></button>\n        </div>\n    );\n}\n\nexport default SearchBar;\n  ","/*\n    Favorite -> Class Components\n    1.We are storing the favorited recipes in localStorage \n    2.Using 'recipeId' props value to check whether the recipe is favorited.\n    \n    props { recipeId }\n    state { isFavorite }\n*/\n\nimport React, {Component} from 'react';\nclass Favorite extends Component {\n    constructor(props) {\n      super(props)\n      this.state = {\n          isFavorite: false\n      };\n    }\n\n    handleIsFavorite = () => {\n        let favoriteRecipes = localStorage.getItem('favoriteRecipes') ? JSON.parse(localStorage.getItem('favoriteRecipes')) : [];\n        !this.state.isFavorite ? favoriteRecipes.push(this.props.recipeId) : favoriteRecipes.splice(favoriteRecipes.findIndex( id => id === this.props.recipeId), 1)\n        localStorage.setItem('favoriteRecipes', JSON.stringify([...new Set(favoriteRecipes)]))\n        this.setState( prevState => { \n            return  { isFavorite: !prevState.isFavorite }\n        })\n    }\n\n    render(){\n        const { recipeId } = this.props;\n        const favoriteRecipes = localStorage.getItem('favoriteRecipes') ? JSON.parse(localStorage.getItem('favoriteRecipes')) : [];\n        const isFavorited = favoriteRecipes.findIndex( id => id === recipeId) === -1 ? false : true;\n        return (\n            <div className=\"Favorite\">\n                <span className=\"Favorite--toggle\" href=\"#\" onClick={this.handleIsFavorite}>\n                    <i className={`${isFavorited ? 'fas' : 'far'} fa-heart`}></i>\n                </span>\n            </div>\n        )\n    }\n}\n\nexport default Favorite;","/*\n    Recipes -> Class Components\n\n    -> On componentDidMount we fetching all recipes from 'https://s3-eu-west-1.amazonaws.com/frontend-dev-test/recipes.json' and storing on localStorage to persist data.\n    -> While fetching data, based on the response will be showing loading progress to the user\n    -> When the user tries to filter recipe from the list by using search input, we highlighting the text which is entered in search fields in all matching recipes from the list\n    -> User can be able to navigate recipe details page by clicking on title of recipe.\n\n    1.All the recipes are displayed\n    2.The data of each recipe is displayed in a user-friendly way. the recipe card should display at least: recipe's name, headline, image, calories and time.\n    3.Each recipe can be favorited or unfavorited\n    4.Each recipe can be rated\n    5.User can able to filter the recipe based on input search string\n    \n    state { recipes, isFetching, error, filterText}\n    props { }\n*/\n\nimport React, { Component, Fragment } from 'react';\nimport logo from '../assets/hellofresh-logo.svg';\nimport Rating from \"../components/Rating\";\nimport SearchBar from \"../components/SearchBar\";\nimport Favorite from '../components/Favorite';\nimport { Link } from \"react-router-dom\";\n\nclass Recipes extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      recipes: [],\n      isFetching: true,\n      error: null,\n      filterText: null\n    };\n  }\n\n  getRecipes = () => {\n    const url = window.encodeURI('https://s3-eu-west-1.amazonaws.com/frontend-dev-test/recipes.json');\n    fetch(url)\n      .then(response => response.json())\n      .then(json => this.setState({ recipes: json, isFetching: false }, () => {\n        localStorage.setItem(\"recipes\", JSON.stringify(json))\n      }))\n      .catch(error => this.setState({ isFetching: true, error }))\n  }\n\n  async componentDidMount() {\n    await this.getRecipes();\n  }\n\n  handleFilterTextInput = (e) => {\n    this.setState({\n      filterText: e.target.value\n    });\n  }\n\n  findMatches = (wordToMatch, recipes) => {\n    return recipes.filter(recipe => {\n      const regex = new RegExp(wordToMatch, 'gi');\n      return recipe.name.match(regex)\n    });\n  }\n\n  clearText = () => {\n    this.setState({\n      filterText: ''\n    });\n  }\n\n  render() {\n    const { recipes, isFetching, filterText } = this.state;\n    const regex = filterText && new RegExp(filterText, 'gi');\n    const recipesList = filterText ? this.findMatches(filterText, recipes) : recipes;\n\n    return (\n      <Fragment>\n        <header className=\"Recipes__header\">\n          <img src={logo} alt=\"logo\" />\n          <SearchBar filterText={this.state.filterText} onFilterTextInput={this.handleFilterTextInput} handleClearText={this.clearText} />\n        </header>\n        <div className=\"Recipes__container\">\n        {!isFetching ? \n          <section className=\"Recipes__container--cards\">\n            {recipesList && recipesList.map(recipe => {\n              return (\n                <article key={recipe.id}>\n                  <div className=\"recipe radius shadowDepth\">\n                    <div className=\"recipe__image border-tlr-radius\">\n                      <img src={recipe.thumb} alt=\"imageTag\" className=\"border-tlr-radius\" />\n                    </div>\n\n                    <div className=\"recipe__content recipe__padding\">\n                      <Favorite recipeId={recipe.id}/>\n\n                      <article className=\"recipe__article\">\n                        <Link to={`recipe/${recipe.id}`} key={recipe.id}>\n                          <h2>\n                            <span\n                              dangerouslySetInnerHTML={{\n                                __html: recipe.name.replace(regex, `<strong class=\"match\">${filterText}</strong>`)\n                              }} /></h2>\n                        </Link>\n                        <p>{recipe.headline}</p>\n                      </article>\n                    </div>\n                    <div className=\"recipe__meta recipe__padding\">\n                      <span>{recipe.calories}</span>\n                      <time>{recipe.time.split('').slice(2).join('')}</time>\n                      <Rating recipeId={recipe.id} recipeRating={Math.floor(recipe.rating)} />\n                    </div>\n                  </div>\n                </article>\n              )\n            })\n            }\n          </section>\n          : <div className=\"loading\"><span></span></div>\n          }\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nexport default Recipes;\n","/*\n    RecipeDetails -> Function Components\n\n    ->We reading the recipe ID from route and fetching the all details from localStorage which is persisted during Recipe component load.\n\n    1. This is used to display recipe details, this page display description, ingredients, fats, calories, proteins, carbs and preparation time.\n    2. Each recipe can be favorited or unfavorited\n    3. Each recipe can be rated\n\n    props { location }\n*/\n\nimport React from 'react';\nimport { Link } from \"react-router-dom\";\nimport Favorite from '../components/Favorite';\nimport Rating from \"../components/Rating\";\n\nconst RecipeDetails = ({location}) =>{\n\n    const recipes  = JSON.parse(localStorage.getItem(\"recipes\")) || [];\n    const id = location && location.pathname.split('/')[2];\n    const recipe = recipes.find(recipe => recipe.id === id);\n    return (\n      <div className=\"RecipeDetails\">\n        {recipe && \n              <div className=\"RecipeDetails__wrapper\">\n              <Link to=\"/\"><div className=\"RecipeDetails--goback\"><i className=\"fa fa-arrow-left\"></i></div></Link>\n              <div className=\"RecipeDetails__left\">\n                <div className=\"RecipeDetails__left__info\">\n                  <div className=\"RecipeDetails__left__title\">{recipe.name}</div>\n                  <div className=\"RecipeDetails__left__headline\">{recipe.headline}</div>\n                </div>\n                <div className=\"RecipeDetails__left__image\">\n                  <img src={recipe.image} alt=\"\"/>\n                  <Rating recipeId={recipe.id} recipeRating={Math.floor(recipe.rating)} />\n                </div>\n              </div>\n              <div className=\"RecipeDetails__right\">\n                <div className=\"RecipeDetails__right__description\">{recipe.description}</div>\n                <div className=\"RecipeDetails__right__ingredients\">\n                  <h1>Ingredients</h1>\n                  <ul>\n                      {recipe.ingredients.map((ingredient, i) => (\n                          <li key={i}>{ingredient}</li>\n                      ))}\n                  </ul>\n                </div>\n            </div>\n            <div className=\"RecipeDetails__favorite\">\n              <Favorite recipeId={recipe.id}/>\n            </div>\n            <div className=\"RecipeDetails__bottom\">\n                <div className='RecipeDetails__bottom__meta'>\n                  <ul>\n                      {recipe.fats && <li><span className=\"fa\">Fats</span>{recipe.fats}</li>}\n                      {recipe.calories && <li><span className=\"fa\">Calories</span>{recipe.calories}</li>}\n                      {recipe.proteins && <li><span className=\"fa\">Proteins</span>{recipe.proteins}</li>}\n                      {recipe.carbos && <li><span className=\"fa\">Carbs</span>{recipe.carbos}</li>}\n                      {recipe.time && <li><span className=\"fa\">Preparation time</span>{recipe.time.split('').slice(2).join('')}</li>}\n                  </ul>\n                </div>\n              </div>\n          </div>\n        }\n      </div>\n    );\n//   }\n}\n\nexport default RecipeDetails;\n","/*\n    NoMatch -> Function Components\n    1. This is used to display 404 messages if route doesn't match\n\n    props { }\n*/\n\nimport React from \"react\";\n\nconst NoMatch = () => {\n    return (\n        <div className=\"NoMatch\">\n    \t    <h1>Not found <span>:(</span></h1>\n\t\t\t<p>Sorry, but the page you were trying to view does not exist.</p>\n\t\t\t<i>404</i>\n            <br />\n            <a href=\"/\">Go Home</a>\n\t\t</div>\n    )\n};\n\nexport default NoMatch;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Recipes from \"./container/Recipes\";\nimport RecipeDetails from \"./container/RecipeDetails\";\nimport NoMatch from \"./components/NoMatch\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Router>\n          <Switch>\n            <Route exact path=\"/\" component={Recipes}/>\n            <Route path=\"/recipe/:recipeId\" component={RecipeDetails}/>\n            <Route component={NoMatch}w/>\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.scss';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}